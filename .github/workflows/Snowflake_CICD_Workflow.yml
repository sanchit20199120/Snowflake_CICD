name: Snowflake_CICD_Workflow

on:
  pull_request:
    types: [closed]
    branches: [DEV]

jobs:
  Build:
    runs-on: ubuntu-latest
    environment:
      name: Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Check Python version
        run: python --version

      - name: Install Snowflake Connector for Python
        run: |
          pip install snowflake-connector-python

      - name: Run SQL Scripts on Snowflake
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SF_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
          SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SF_SCHEMA }}
        run: |
          python python_scripts/snowflake_deployment.py

  merge_and_deploy_qa:
    runs-on: ubuntu-latest
    needs: Build  # Ensure this job runs after the build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Fetch all branches
        run: |
          git fetch origin

      - name: Checkout dev branch
        run: |
          git checkout DEV

      - name: Merge DEV into QA
        run: |
          git fetch origin
          git checkout QA
          git merge DEV --no-ff --allow-unrelated-histories -m "Merge DEV into QA"
          git push origin QA
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Check Python version
        run: python --version

      - name: Install Snowflake Connector for Python
        run: |
          pip install snowflake-connector-python   

      - name: Deploy to QA Snowflake
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SF_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
          SNOWFLAKE_DATABASE: ${{ secrets.SF_QA_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SF_QA_SCHEMA }}
        run: |
          python python_scripts/snowflake_deployment.py



